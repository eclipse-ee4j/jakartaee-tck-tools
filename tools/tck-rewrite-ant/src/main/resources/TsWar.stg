// A Stringtemplate4 group for the ts.war.xml logic for creating a war artifact
delimiters "#", "#"

// war is an tck.jakarta.platform.ant.War instance
genWar(war, testClass) ::= <<
    // the war with the correct archive name
    WebArchive #war.typedArchiveName# = ShrinkWrap.create(WebArchive.class, "#war.fullArchiveName#");
    // The class files
    #war.typedArchiveName#.addClasses(
    #war.classFilesString#
    );
#if(war.hasAnonymousClasses)#
#war.anonymousClasses :{ c |
    #war.typedArchiveName#.addClass("#c#");
}#
#endif#
    // The web.xml descriptor
    URL warResURL = #testClass#.class.getResource("/#war.relativeDescriptorPath#");
    if(warResURL != null) {
      #war.typedArchiveName#.addAsWebInfResource(warResURL, "web.xml");
    }
    // The sun-web.xml descriptor
    warResURL = #testClass#.class.getResource("/#war.relativeDescriptorPathNoXml#.war.sun-web.xml");
    if(warResURL != null) {
      #war.typedArchiveName#.addAsWebInfResource(warResURL, "sun-web.xml");
      archiveProcessor.processWebArchive(#war.typedArchiveName#, #testClass#.class, warResURL);
    }
    // Web content
#war.webContent :{ c |
    warResURL = #testClass#.class.getResource("/#c.resPath#");
    #war.typedArchiveName#.addAsWebResource(warResURL, "/#c.target#");
}#
>>
