// A Stringtemplate4 group for the ts.ejbjar.xml logic for creating a ejb-jar artifact
delimiters "#", "#"


// ejbjar is an tck.jakarta.platform.ant.EjbJar instance
genEjbJar(n, ejbjar, testClass) ::= <<
    // the jar with the correct archive name
    JavaArchive #ejbjar.typedArchiveName# = ShrinkWrap.create(JavaArchive.class, "#ejbjar.fullArchiveName#");
    // The class files
    #ejbjar.typedArchiveName#.addClasses(
        #ejbjar.classFilesString#
    );
#if(ejbjar.hasAnonymousClasses)#
#ejbjar.anonymousClasses :{ c |
    #ejbjar.typedArchiveName#.addClass("#c#");
}#
#endif#
    // The ejb-jar.xml descriptor
    URL ejbResURL#n# = #testClass#.class.getResource("/#ejbjar.relativeDescriptorPath#");
    if(ejbResURL#n# != null) {
      #ejbjar.typedArchiveName#.addAsManifestResource(ejbResURL#n#, "ejb-jar.xml");
    }
    // The sun-ejb-jar.xml file
    ejbResURL#n# = #testClass#.class.getResource("/#ejbjar.relativeDescriptorPathNoXml#.jar.sun-ejb-jar.xml");
    if(ejbResURL#n# != null) {
      #ejbjar.typedArchiveName#.addAsManifestResource(ejbResURL#n#, "sun-ejb-jar.xml");
    }
    // Call the archive processor
    archiveProcessor.processEjbArchive(#ejbjar.typedArchiveName#, #testClass#.class, ejbResURL#n#);
>>
