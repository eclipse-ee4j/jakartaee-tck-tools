// A Stringtemplate4 group for the ts.par.xml logic for creating a ejb-jar artifact
delimiters "#", "#"


// par is an tck.jakarta.platform.ant.Par instance
genPar(par, testClass) ::= <<
    // the jar with the correct archive name
    JavaArchive #par.typedArchiveName# = ShrinkWrap.create(JavaArchive.class, "#par.fullArchiveName#");
    // The class files
    #par.typedArchiveName#.addClasses(
        #par.classFilesString#
    );
#if(par.hasAnonymousClasses)#
#par.anonymousClasses :{ c |
    #par.typedArchiveName#.addClass("#c#");
}#
#endif#
    // The persistence.xml descriptor
    URL parURL = #testClass#.class.getResource("persistence.xml");
    if(parURL != null) {
      #par.typedArchiveName#.addAsManifestResource(parURL, "persistence.xml");
    }
    // Add the Persistence mapping-file
    URL mappingURL = #testClass#.class.getResource("myMappingFile.xml");
    if(mappingURL != null) {
      #par.typedArchiveName#.addAsResource(mappingURL, "myMappingFile.xml");
    }
    mappingURL = #testClass#.class.getResource("myMappingFile1.xml");
    if(mappingURL != null) {
      #par.typedArchiveName#.addAsResource(mappingURL, "myMappingFile1.xml");
    }
    mappingURL = #testClass#.class.getResource("myMappingFile2.xml");
    if(mappingURL != null) {
      #par.typedArchiveName#.addAsResource(mappingURL, "myMappingFile2.xml");
    }
    // Call the archive processor
    archiveProcessor.processParArchive(#par.typedArchiveName#, #testClass#.class, parURL);
    // The orm.xml file
    parURL = #testClass#.class.getResource("orm.xml");
    if(parURL != null) {
      #par.typedArchiveName#.addAsManifestResource(parURL, "orm.xml");
    }
>>
