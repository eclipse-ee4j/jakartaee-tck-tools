#
# $Id$
#
#
# Copyright 1996-2008 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
#

Main.error.arg.conflict=Option {0} conflict with {1}
Main.error.arg.invalid=Invalid value for option: {0}
Main.error.arg.legacy=Option <{0}> is not supported.
Main.error.check=Unexpected exception during check {0}
Main.error.sec.newclasses=The security constraint does not allow tracking class path for tracking of the added new classes.
#Main.error.classpath.unspec=TS classpath not specified or incorrect.
Main.error.sigfile.invalid=Invalid signature file: {0}

Main.warning.ts.empty={0}(No TS classes found)
Main.warning.class.invalid=Invalid class file: {0}

Main.usage.start=Available options are:
Main.usage.ts={0}         <path> specifies where to find TS classes
Main.usage.tsInclude={0}  <pack> includes classes from the specified package (recursive)
Main.usage.tsIncludeW={0} <pack> includes classes from the specified package (without subpackages)
Main.usage.tsExclude={0}  <pack> exclude sclasses from the specified package (recursive)
Main.usage.api={0}         <path> specifies where to find signature file of API
Main.usage.apiInclude={0}  <pack> includes classes from the specified package (recursive)
Main.usage.apiIncludeW={0} <pack> includes classes from the specified package (without subpackages)
Main.usage.apiExclude={0}  <pack> excludes classes from the specified package (recursive)
Main.usage.excludeList={0} <file> specifies exclude list file
Main.usage.excludeInterfaces={0}      excludes all intefraces
Main.usage.excludeAbstractClasses={0} excludes all abstract classes
Main.usage.excludeAbstractMethods={0} excludes all abstract methods
Main.usage.excludeFields={0}          excludes all fields
Main.usage.includeConstantFields={0}  includes all final constant fields
Main.usage.mode={0}    <v>     specifies mode of coverage calculation ''w'' or ''r''
Main.usage.detail={0}  <n>     specifies level of report detalization 0..4
Main.usage.format={0}  <type>  specifies report format (plain/xml)
Main.usage.report={0}  <file>  specifies where to place generated report file
Main.usage.debug={0}           enable debug mode
Main.usage.help={0}            print this text
Main.usage.version={0}         print version
Main.usage.end=All options are case-insensitive.

ReportPlain.report.Coverage=Coverage Report
ReportPlain.report.Package=Package
ReportPlain.report.classes=classes
ReportPlain.report.Class=Class
ReportPlain.report.members=members
ReportPlain.report.tested=tested
ReportPlain.report.Member=Member
ReportPlain.report.Overall=Overall coverage
ReportPlain.report.Legend=Legend
ReportPlain.report.covered=covered member
ReportPlain.report.uncovered=uncovered member
ReportPlain.report.Configuration=Configuration

#Main.error.sigfile.prob=Problem with signature file
#Main.error.sigfile.sec=Security constraints does not allow to read from signature file
#Main.error.sigfile.error=Error in signature file: {0}
#Main.error.url.missing=URL not specified
#Main.error.sigreader.missing=Can''t find reader for {0} or file doesn''t exist
#Main.error.sigfile.missing=No -api option specified.
#Main.error.sigfile.unreadable=Can''t read specification file.
#Main.mesg.sigfile.noconst=The signature file does not contain constant values
#Main.error.arg.missingval=Missing value for option {0}.
#Main.error.arg.nofile={0} (No such file or directory)
#Main.error.arg.missingval=Missing value for <-{0}> option.

#Main.error.arg.dup=The {0} option is specified twice.
#Main.error.arg.no=The mandatory option {0} is not specified.
#Main.error.arg.incorrect=Incorrect option: {0}
#Main.error.out.invfile=Invalid {0} file name
#Main.mesg.sigtest.report=SignatureTest report
#Main.mesg.sigtest.testvers=Tested version: {0}
#Main.mesg.sigtest.checkmode=Check mode: {0}
#Main.mesg.sigtest.checkmode.norm=Check mode: {0} [throws normalized]
#Main.mesg.sigtest.constcheck=Constant checking: {0}
#Main.mesg.sigtest.tigercheck=Tiger features are not checked

#Main.mesg.failed={0} errors
#Main.mesg.added=Added
#Main.mesg.missing=Missing
#Main.mesg.linkerr=LinkageError
#Main.mesg.linkerr.thrown= thrown {0}
#Main.mesg.linkerr.notlink= {0} not linked
#Main.mesg.classpath.sec=The security constraints does not allow to inspect class path.
#Main.mesg.verbose.check=Checking class {0}
#Main.mesg.verbose.checkAddedClass=Class (added) ''{0}'' was excluded due: ''{1}''

#Main.error.url.invalid=Invalid URL
#Main.error.url.threwerror={0} throw {1}
